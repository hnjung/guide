/*
	파일정보 : 폼 > 텍스트필드
	업데이트 : 2024-08-01
*/

@use 'config' as config;

/* 인풋 */
::placeholder,
::-webkit-input-placeholder {color: config.variable(color, #6c757d);}

.input {position: relative; display: inline-block; vertical-align: middle;}
.input-data,
.read-data {width: 100%; padding: 1.5rem; border: config.variable(border, .1rem) solid config.variable(color, #dee2e6); border-radius: config.variable(radius, .8rem); font-size: config.variable(font, body, 1.6rem); transition: border config.variable(animation, speed, fast) config.variable(animation, timing, base); color: config.variable(color, #000);}
.input-data {background-color: config.variable(color, #fff);}
.read-data {border-color: transparent;}
.input-data:read-only {background-color: config.variable(color, #f8f9fa); color: config.variable(color, #000);}
.input-data.is-keypad:read-only {background-color: config.variable(color, #fff);}
div.input-data.is-keypad:read-only {background-color: config.variable(color, #f8f9fa);}
.input-data:disabled {border-color: config.variable(color, #e9ecef); background-color: config.variable(color, #f8f9fa); color: config.variable(color, #ced4da); cursor: default;}
.input-data.is-error {border-color: config.variable(color, #dc3545);}
.input-data:focus,
.input.is-text-focus .input-data {border-color: config.variable(color, #0d6efd); outline: none; box-shadow: var(--shadow-primary-lg);}
.input-data .is-placeholder {color: var(--#{config.$prefix}color-base-50);}

.input .input-data.is-active {padding-right: 4.3rem;}

.input .btn-clear {display: none; position: absolute; overflow: hidden; top: 50%; right: config.variable(space, .8rem); width: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); height: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); margin-top: calc((var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)) / 2 * -1); padding: config.variable(space, .4rem); border: 0; transform: scale3d(0, 0, 1); opacity: 0; transform-origin: 50% 50%;}
.input .btn-clear::before {content: ''; display: block; width: 100%; height: 100%; background: var(--bg-url-md) no-repeat 0 calc(var(--#{config.$prefix}icon-md) * -3); background-size: var(--bg-size-md);}
.input .input-data.is-active ~ .btn-clear {display: block; 
	animation-fill-mode: forwards; 
	animation-duration: config.variable(animation, speed, base); 
	animation-name: animation-input-clear1, animation-input-clear2; 
	animation-timing-function: config.variable(animation, timing, base), var(--animation-timing-outback);
}
@keyframes animation-input-clear1 {
	100% {
		opacity: 1;
	}
}
@keyframes animation-input-clear2 {
	100% {
		transform: scale3d(1, 1, 1);
	}
}

.input-data[type='number']::-webkit-inner-spin-button {appearance: none; -moz-appearance: none; -webkit-appearance: none;}

.input-data[data-input-delete='false'] ~ .btn-clear {display: none;}

.input.option-person-id {width: 1.2rem; padding: 0 !important;}
.input.option-person-id .input-data {padding-right: 0 !important; padding-left: 0 !important;}
.input.option-person-id .input-data::placeholder,
.input.option-person-id .input-data::-webkit-input-placeholder {background: url('../../image/com/ico-hyphen.svg') no-repeat 0 100%; background-size: 100% auto;}
.input.option-person-id .btn-clear {display: none !important;}

/** 인풋 - 검색어 자동입력 */
.input.option-search .input-data {padding-right: 4.3rem;}
.input.option-search .input-data.is-active {padding-right: 7.5rem;}
.input.option-search .btn-search {position: absolute; top: 50%; right: config.variable(space, .8rem); width: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); height: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); margin-top: calc((var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)) / 2 * -1); padding: config.variable(space, .4rem);}
.input.option-search .btn-search::before {content: ''; display: block; width: 100%; height: 100%; background: var(--bg-url-md) no-repeat 0 0; background-size: var(--bg-size-md);}
.input.option-search .btn-clear {right: 4.0rem;}
.input.option-search .input-data:read-only,
.input.option-search .input-data:disabled {padding-right: calc(config.variable(space, 1.6rem) - config.variable(border, .1rem));}
.input.option-search .input-data:read-only ~ .btn-search,
.input.option-search .input-data:disabled ~ .btn-search {display: none;}

.input.option-search .words {display: none; opacity: 0; height: 0; position: absolute; z-index: 1; overflow: hidden; width: max-content; min-width: 100%; border: 0 solid config.variable(color, #e9ecef); border-radius: config.variable(radius, .8rem); background-color: config.variable(color, #fff); box-shadow: var(--shadow-lg); transition: opacity config.variable(animation, speed, fast) config.variable(animation, timing, base);}
.input.option-search .words[class*="show-"] {display: block; z-index: 3; overflow-y: auto; max-height: 25.4rem; height: auto; opacity: 1; border-width: config.variable(border, .1rem);}
.input.option-search .words.show-down {top: 6.0rem;}
.input.option-search .words.show-up {bottom: 6.0rem;}
.input.option-search .words.option-down {top: 6.0rem; bottom: auto;}
.input.option-search .words.option-up {bottom: 6.0rem; top: auto;}
.input.option-search .words.option-sm {max-height: 16.4rem;}
.input.option-search .word-item {background-color: config.variable(color, #fff);}
.input.option-search .word-item > a {display: block; padding: 1.2rem 2.3rem; line-height: 1.35; font-size: config.variable(font, body, 1.6rem); color: config.variable(color, #000);}
.input.option-search .word-item > a > strong {font-weight: config.variable(font, 400); color: config.variable(color, #0d6efd);}
.input.option-search .word-item:active,
.input.option-search .word-item:hover {background-color: config.variable(color, #f8f9fa);}

.input.option-search.rounded .input-data {width: 32.4rem; padding-top: 1.1rem; padding-bottom: 1.1rem; padding-right:4.8rem; border-radius: 10.0rem; font-size: config.variable(font, body, 1.4rem);}
.input.option-search.rounded .btn-search {right: config.variable(space, 1.6rem);}

/** 인풋 - 이메일 */
.input.option-email .word-item > a {color: config.variable(color, #0d6efd);}
.input.option-email .word-item > a > em {color: config.variable(color, #000);}
.input.option-email .input-data {padding-right: 1.5rem;}
.input.option-email .input-data.is-active {padding-right: 4.3rem;}
.input.option-email .btn-clear {right: 1.2rem;}
.input.option-email .word-item {display: block;}
.input.option-email .word-item.is-hide {display: none;}

/** 인풋 - 검색창 호출 */
.input.option-popup .input-data {padding-left: 4.3rem;}
.input.option-popup .input-data.is-active {padding-right: 4.0rem;}
.input.option-popup .btn-search {position: absolute; top: 50%; left: config.variable(space, .8rem); width: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); height: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); margin-top: calc((var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)) / 2 * -1); padding: config.variable(space, .4rem);}
.input.option-popup .btn-search::before {content: ''; display: block; width: 100%; height: 100%; background: var(--bg-url-md) no-repeat 0 0; background-size: var(--bg-size-md);}

/** 인풋 - 날짜 */
.input.option-date .input-data {padding-right: 4.3rem;}
.input.option-date .input-data.is-active {padding-right: 7.5rem;}
.input.option-date .btn-calendar {position: absolute; top: 50%; right: config.variable(space, .8rem); width: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); height: calc(var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)); margin-top: calc((var(--#{config.$prefix}icon-md) + config.variable(space, .8rem)) / 2 * -1); padding: config.variable(space, .4rem);}
.input.option-date .btn-calendar::before {content: ''; display: block; width: 100%; height: 100%; background: var(--bg-url-md) no-repeat calc(var(--#{config.$prefix}icon-md) * -1) 0; background-size: var(--bg-size-md);}
.input.option-date .btn-clear {right: 4.0rem;}
.input.option-date .input-data:disabled {padding-right: calc(config.variable(space, 1.6rem) - config.variable(border, .1rem));}
.input.option-date .input-data:disabled ~ .btn-calendar {display: none;}

/** 인풋 - 버튼혼합 */
.input-button {display: inline-flex; flex-direction: row; align-items: center; justify-content: space-between; border: config.variable(border, .1rem) solid config.variable(color, #dee2e6); border-radius: config.variable(radius, .8rem); background-color: config.variable(color, #fff); vertical-align: middle;}
.input-button.is-error {border-color: config.variable(color, #dc3545);}
.input-button.is-text-focus,
.input-button.is-select-focus {border-color: config.variable(color, #0d6efd); box-shadow: var(--shadow-primary-lg);}
.input-button.is-disabled {background-color: config.variable(color, #f8f9fa); border-color: config.variable(color, #e9ecef);}
.input-button.is-readonly {background-color: config.variable(color, #f8f9fa);}

.input-button > .unit {flex-shrink: 1;}
.input-button > .unit.fixed {flex-shrink: 0;}
.input-button > .unit.filled {flex-shrink: 1; width: 100%;}

.input-button > .unit .select .select-button {border: 0;}
.input-button > .unit .input {padding: .3rem;}
.input-button > .unit .input-data {border: 0; outline: none; box-shadow: none; padding: 1.2rem; border-radius: var(--radius-sm);}
.input-button > .unit:nth-child(n + 2) .input-data {padding-left: 0;}
.input-button > .unit > .btn {margin-right: 1.1rem; margin-left: .8rem;}

.input-button.option-read .read-data {min-height: 5.4rem; border: none;}
.input-button.option-read .read-data .is-placeholder {color: var(--#{config.$prefix}color-base-50);}
.input-button.option-read .btn.contained.option-md {padding: .5rem 1.1rem .4rem; border-radius: config.variable(radius, .6rem); font-size: config.variable(font, body, 1.4rem);}
.input-button.option-read > .unit .read-data {min-height: 4.8rem; padding: 1.2rem;}

.input-button .dash {padding-right: 1.2rem;}
.input-button .dash::before {content: ''; display: inline-block; width: .8rem; height: .2rem; background-color: config.variable(color, #000); vertical-align: middle;}

.input-button.type-code {width: 100%; font-size: 0;}
.input-button.type-code .fix-timer {margin-right: config.variable(space, .4rem);}
.input-button.type-code > .unit > .btn.option-sm {margin-left: config.variable(space, .4rem); margin-right: 0;}
.input-button.type-code > .unit > .btn.option-sm:last-child {margin-left: config.variable(space, .4rem); margin-right: 1.1rem;}

/** 인풋 - 혼합 */
.input-mixed {display: inline-flex; flex-direction: row; align-items: center; justify-content: space-between; border: config.variable(border, .1rem) solid config.variable(color, #dee2e6); border-radius: config.variable(radius, .8rem); background-color: config.variable(color, #fff); vertical-align: middle;}
.input-mixed.is-error {border-color: config.variable(color, #dc3545);}
.input-mixed.is-text-focus,
.input-mixed.is-select-focus {border-color: config.variable(color, #0d6efd); box-shadow: var(--shadow-primary-lg);}
.input-mixed.is-disabled {background-color: config.variable(color, #f8f9fa); border-color: config.variable(color, #e9ecef);}
.input-mixed.is-readonly {background-color: config.variable(color, #f8f9fa);}

.input-mixed > .unit {flex-shrink: 1;}
.input-mixed > .unit.fixed {flex-shrink: 0;}
.input-mixed > .unit.filled {flex-shrink: 1; width: 100%;}

.input-mixed > .unit .select .select-button {border: 0;}
.input-mixed > .unit .input {padding: .3rem;}
.input-mixed > .unit .input-data {border: 0; outline: none; box-shadow: none; padding: 1.2rem; border-radius: var(--radius-sm);}
.input-mixed > .unit div.input-data {min-height: 4.8rem;}
.input-mixed > .unit .input .input-data.is-active {padding-right: 4.0rem;}
.input-mixed > .unit:nth-child(n + 2) .input-data {padding-left: .6rem;}
.input-mixed > .unit:nth-child(n + 2) .input-data:read-only {padding-left: 1.2rem;}
.input-mixed > .unit > .btn {margin-right: .7rem; margin-left: .1rem;}

.input-mixed .dash {padding: 0 .4rem;}
.input-mixed .dash::before {content: ''; display: inline-block; width: .8rem; height: .2rem; background-color: config.variable(color, #000); vertical-align: middle;}
.input-mixed .txt {padding-right: 1.5rem;}

.input-mixed.type-card {font-size: 0;}
.input-mixed.type-card > .unit .input-data {padding-left: 0; padding-right: 0; text-align: center;}
.input-mixed.type-card > .unit .input-data:read-only {padding-left: 0;}
.input-mixed.type-card .dash {padding-left: .1rem; padding-right: .1rem;}

.input-mixed.type-id {width: 100%;}
.input-mixed.type-id .dash {padding-left: .1rem; padding-right: .1rem;}
.input-mixed.type-id .code-back {display: flex; flex-direction: row; align-items: center; justify-content: space-between;}
.input-mixed.type-id .code-back1 {flex-shrink: 0;}
.input-mixed.type-id .code-back1 .input-data {width: 2.4rem; padding-left: 0; padding-right: 0; text-align: center;}
.input-mixed.type-id .code-back1 .input-data:read-only {padding-left: 0;}
.input-mixed.type-id .code-back1 .input-data.is-active {padding-right: 0;}
.input-mixed.type-id .code-back1 .btn-clear {display: none;}
.input-mixed.type-id .code-back2 {flex-shrink: 1; width: 100%; padding-left: .2rem;}
.input-mixed.type-id .code-back2 .input {width: 100%;}
.input-mixed.type-id .code-back2 .input-data {width: 100%; padding-left: 0;}

.item-row .unit .dash::before {content: ''; display: inline-block; width: .8rem; height: .2rem; background-color: config.variable(color, #000); vertical-align: middle;}